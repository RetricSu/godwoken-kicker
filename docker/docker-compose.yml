version: '3.8'

services:
  postgres:
    image: postgres:alpine
    ports: 
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: lumos
      POSTGRES_PASSWORD: password
    volumes:
      - ./postgres/web3-indexer-schema.sql:/docker-entrypoint-initdb.d/web3-indexer-schema.sql
      - ./postgres/data:/var/lib/postgresql/data
    
  redis:
    image: redis:bullseye
    user: root:root
    ports: 
      - 6379:6379
    volumes:
      - ./redis/data:/data

  ckb:
    image: nervos/ckb:v0.101.4
    user: root
    ports:
      - 8114:8114   # rpc
      - 8115:8115   # p2p network
    volumes:
      - ./layer1/ckb:/var/lib/ckb
    command: [ "run", "-C", "/var/lib/ckb" ]

  ckb-miner:
    image: nervos/ckb:v0.101.4
    user: root
    volumes:
      - ./layer1/ckb:/var/lib/ckb
    command: [ "miner", "-C", "/var/lib/ckb" ]

  # "nervos/ckb" image have no http clients to do health check for CKB.
  # This short-term service act as a workaround to do health check.
  check-ckb-started-successfully:
    image: ghcr.io/flouse/godwoken-prebuilds:v1.0.x-202203090147
    volumes:
      - ./layer1/ckb:/var/lib/ckb
    entrypoint: /var/lib/ckb/check-ckb-started-successfully.sh
    depends_on:
      - ckb

  ckb-indexer:
    image: nervos/ckb-indexer:0.3.2
    environment:
      CKB_RPC: http://ckb:8114
    ports:
      - "8116:8116"
    ### It is not a good idea to volume ckb-index data when test.
    # volumes:
    #   - ./ckb-indexer:/var/lib/ckb-indexer
    command: [ "-c", "http://ckb:8114", "-l", "0.0.0.0:8116", "-s", "/var/lib/ckb-indexer/" ]
    depends_on:
      check-ckb-started-successfully:
        condition: service_completed_successfully

  setup-godwoken:
    image: ghcr.io/flouse/godwoken-prebuilds:v1.0.x-202203090147
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: lumos
      POSTGRES_PASSWORD: password
      GODWOKEN_MODE: fullnode
      STORE_PATH: /var/lib/layer2/data
      PRIVATE_KEY_PATH: /private_key
      META_USER_PRIVATE_KEY_PATH: /meta_user_private_key
    volumes:
      - ./layer2:/var/lib/layer2
      - ../config/private_key:/private_key
      - ../config/meta_user_private_key:/meta_user_private_key
    command: [ "/var/lib/layer2/setup-godwoken.sh", "all" ]
    restart: "no"
    depends_on:
      ckb:
        condition: service_started
      ckb-miner:
        condition: service_started
      ckb-indexer:
        condition: service_started
      check-ckb-started-successfully:
        condition: service_completed_successfully
      postgres:
        condition: service_started

  godwoken:
    image: ghcr.io/flouse/godwoken-prebuilds:v1.0.x-202203090147
    volumes:
      - ./layer2:/var/lib/layer2
      - ../config/private_key:/private_key
    environment:
      GODWOKEN_MODE: fullnode
      RUST_BACKTRACE: full
    ports:
      - 8119:8119 # rpc
      - 8120:8120 # err_receipt_ws_listen
    command: [ "godwoken", "run", "-c", "/var/lib/layer2/config/godwoken-config.toml" ]
    depends_on:
      setup-godwoken:
        condition: service_completed_successfully
      postgres:
        condition: service_started

  check-godwoken-started-successfully:
    image: ghcr.io/flouse/godwoken-prebuilds:v1.0.x-202203090147
    volumes:
      - ./layer2/:/var/lib/layer2
    entrypoint: /var/lib/layer2/check-godwoken-started-successfully.sh
    depends_on:
      - godwoken
    
  web3:
    image: ghcr.io/retricsu/godwoken-web3-prebuilds:build-compatibility-breaking-changes-2022-03-05-04-13-32
    volumes: 
      - ./layer2/config:/var/lib/layer2/config
      - ./web3/entrypoint.sh:/var/lib/web3/entrypoint.sh
    environment: 
      CONFIG_DIR: /var/lib/layer2/config
    entrypoint: /var/lib/web3/entrypoint.sh
    ports:
      - 8024:8024
    depends_on: 
      ckb:
        condition: service_started
      ckb-miner:
        condition: service_started
      check-ckb-started-successfully:
        condition: service_completed_successfully
      setup-godwoken:
        condition: service_completed_successfully
      godwoken:
        condition: service_started
      check-godwoken-started-successfully:
        condition: service_completed_successfully
      postgres:
        condition: service_started
      redis:
        condition: service_started

  web3-indexer:
    image: ghcr.io/retricsu/godwoken-web3-indexer-prebuilds:build-compatibility-breaking-changes-2022-03-05-04-13-32
    volumes: 
      - ./layer2/config/web3-indexer-config.toml:/var/lib/web3-indexer/indexer-config.toml
    working_dir: /var/lib/web3-indexer
    command: [ "gw-web3-indexer" ]
    depends_on: 
      web3:
        condition: service_started
      godwoken:
        condition: service_started
      check-godwoken-started-successfully:
        condition: service_completed_successfully
      postgres:
        condition: service_started
      redis:
        condition: service_started
